{"version":3,"sources":["Components/UserOffCanvas.jsx","Components/UserCard.jsx","Util/api.js","Pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserOffCanvas","userInfo","placement","scroll","useState","show","setShow","picture","name","email","phone","cell","location","dob","console","log","Button","variant","onClick","className","Offcanvas","onHide","Header","closeButton","Title","title","first","last","age","Body","Container","fluid","Row","Col","sm","Image","src","large","Accordion","Item","eventKey","city","country","street","number","UserCard","gender","Card","style","width","Img","Badge","bg","fetchUsers","numOfUsers","a","fetch","then","res","json","results","users","Home","usersState","setUsersState","useEffect","API","data","map","user","id","value","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAuGeA,EAjGO,YAA4C,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,OACrD,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAIEC,EACEN,EADFM,QAASC,EACPP,EADOO,KAAMC,EACbR,EADaQ,MAAOC,EACpBT,EADoBS,MAAOC,EAC3BV,EAD2BU,KAAMC,EACjCX,EADiCW,SAAUC,EAC3CZ,EAD2CY,IAG/C,OADAC,QAAQC,IAAIR,GAEV,gCACE,cAACS,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAPX,kBAAMZ,GAAQ,IAOkBa,UAAU,OAAzD,wBAGA,eAACC,EAAA,EAAD,CAAWf,KAAMA,EAAMgB,OAXP,kBAAMf,GAAQ,IAWcH,OAAQA,EAAQD,UAAWA,EAAvE,UACE,cAACkB,EAAA,EAAUE,OAAX,CAAkBC,aAAW,EAA7B,SACE,cAACH,EAAA,EAAUI,MAAX,oBAAqBhB,EAAKiB,MAA1B,YAAmCjB,EAAKkB,MAAxC,YAAiDlB,EAAKmB,KAAtD,aAA+Dd,EAAIe,SAErE,cAACR,EAAA,EAAUS,KAAX,UACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,EAAA,EAAD,WAEE,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,cAACC,EAAA,EAAD,CAAOC,IAAK7B,EAAQ8B,MAAOlB,UAAU,aAEvC,cAACc,EAAA,EAAD,UACE,wtBAaF,cAACA,EAAA,EAAD,UACE,eAACK,EAAA,EAAD,WACE,eAACA,EAAA,EAAUC,KAAX,CAAgBC,SAAS,IAAzB,UACE,cAACF,EAAA,EAAUhB,OAAX,sBACA,eAACgB,EAAA,EAAUT,KAAX,WACE,6CAAcpB,KACd,gDAAiBC,KACjB,+CAAgBC,WAGpB,eAAC2B,EAAA,EAAUC,KAAX,CAAgBC,SAAS,IAAzB,UACE,cAACF,EAAA,EAAUhB,OAAX,gCACA,eAACgB,EAAA,EAAUT,KAAX,WACE,sCAAOjB,EAAS6B,KAAhB,aAAyB7B,EAAS8B,WAClC,0CAAW9B,EAAS+B,OAAOnC,KAA3B,aAAoCI,EAAS+B,OAAOC,mCCjB3DC,EAlCE,YAAyB,IAAb5C,EAAY,EAAZA,SACnBM,EAA0BN,EAA1BM,QAASC,EAAiBP,EAAjBO,KAAMsC,EAAW7C,EAAX6C,OACvB,OACE,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAW9B,UAAU,MAA3C,UACE,cAAC4B,EAAA,EAAKG,IAAN,CAAUjC,QAAQ,MAAMmB,IAAK7B,EAAQ8B,QACrC,eAACU,EAAA,EAAKlB,KAAN,WACE,cAACkB,EAAA,EAAKvB,MAAN,oBACMhB,EAAKkB,MADX,YACoBlB,EAAKmB,QAEzB,eAACG,EAAA,EAAD,CAAWX,UAAU,oDAArB,UACE,cAACgC,EAAA,EAAD,CAAOC,GAAG,OAAV,SAAkBN,IAClB,cAAC,EAAD,CAAe7C,SAAUA,EAAUC,UAAU,SAASC,QAAM,c,yBChBhEkD,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACGC,MAAM,GAAD,OAHV,6BAGU,oBAAwBF,IAAcG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAAQF,MAAK,SAACC,GAAD,OAASA,EAAIE,WAD1F,cACXC,EADW,yBAEVA,GAFU,2CAAH,sDAKD,GAAER,cCUFS,EAZF,WACX,MAAoC1D,mBAAS,IAA7C,mBAAO2D,EAAP,KAAmBC,EAAnB,KAIA,OAHAC,qBAAU,WACRC,EAAIb,WAAW,KAAKI,MAAK,SAACU,GAAD,OAAUH,EAAcG,QAChD,IAED,cAACrC,EAAA,EAAD,CAAWX,UAAU,mBAArB,SACG4C,EAAWK,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,CAAUpE,SAAUoE,GAAWA,EAAKC,GAAGC,aCOxDC,EAbH,WACV,OACE,sBAAKrD,UAAU,iBAAf,UACE,qBAAKA,UAAU,oDAAf,SACE,oBAAIA,UAAU,cAAd,4BAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,YCCxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c814e42a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Container, Offcanvas, Image, Accordion, Row, Col,\n} from 'react-bootstrap';\n\nconst UserOffCanvas = function ({ userInfo, placement, scroll }) {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const {\n    picture, name, email, phone, cell, location, dob,\n  } = userInfo;\n  console.log(picture);\n  return (\n    <div>\n      <Button variant=\"primary\" onClick={handleShow} className=\"me-2\">\n        Saiba mais\n      </Button>\n      <Offcanvas show={show} onHide={handleClose} scroll={scroll} placement={placement}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>{`${name.title} ${name.first} ${name.last}, ${dob.age}`}</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          <Container fluid>\n            <Row>\n\n              <Col sm=\"1\">\n                <Image src={picture.large} className=\"m-auto\" />\n              </Col>\n              <Col>\n                <p>\n                  &quot;Sou uma pessoa muito vehicula vitae sapien id, molestie\n                  malesuada nisl. Integer viverra nibh ut pretium vestibulum. Fusce\n                  molestie est non diam ornare, sed veneatis velit viverra. Nullam cursus comodo eni\n                  nec vulputate. Morbi accumsan elit sit amet curus finibus. Vestibulum eu fringilla\n                  magna. Sed convallis, enim et luctus vehicla, lectus elit hendrerit elit, a facili\n                  leo nulla at erat. Morbi sed pora libero, vel lctus ex. Donec mollis magna ut port\n                  ornare. Fusce ipsum velit, gravida in volutpat non, aliqm non odio. Nulla eget nib\n                  suscipit, euismod odio in, tempus lectus. Nulla tincidunt, mauris vel commodo\n                  ultrices, neque lacus consequt ante, non interdm libero augue feugiat lorem.&quot;\n\n                </p>\n              </Col>\n              <Col>\n                <Accordion>\n                  <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>Contato</Accordion.Header>\n                    <Accordion.Body>\n                      <p>{`Email: ${email}`}</p>\n                      <p>{`Telefone: ${phone}`}</p>\n                      <p>{`Celular: ${cell}`}</p>\n                    </Accordion.Body>\n                  </Accordion.Item>\n                  <Accordion.Item eventKey=\"1\">\n                    <Accordion.Header>Localização</Accordion.Header>\n                    <Accordion.Body>\n                      <p>{`${location.city}, ${location.country}`}</p>\n                      <p>{`Rua ${location.street.name}, ${location.street.number}`}</p>\n                    </Accordion.Body>\n                  </Accordion.Item>\n                </Accordion>\n              </Col>\n            </Row>\n          </Container>\n        </Offcanvas.Body>\n      </Offcanvas>\n    </div>\n  );\n};\n\nUserOffCanvas.propTypes = {\n  userInfo: PropTypes.shape({\n    picture: PropTypes.shape({\n      large: PropTypes.string,\n      medium: PropTypes.string,\n      thumbnail: PropTypes.string,\n    }),\n    name: PropTypes.shape({\n      title: PropTypes.string,\n      first: PropTypes.string,\n      last: PropTypes.string,\n    }),\n    location: PropTypes.shape({\n      city: PropTypes.string,\n      country: PropTypes.string,\n      street: PropTypes.shape({\n        name: PropTypes.string,\n        number: PropTypes.number,\n      }),\n    }),\n    dob: PropTypes.shape({\n      age: PropTypes.number,\n    }),\n    gender: PropTypes.string,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n    cell: PropTypes.string,\n  }).isRequired,\n  placement: PropTypes.string.isRequired,\n  scroll: PropTypes.bool.isRequired,\n};\n\nexport default UserOffCanvas;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Badge, Card, Container,\n} from 'react-bootstrap';\nimport UserOffCanvas from './UserOffCanvas';\n\nconst UserCard = function ({ userInfo }) {\n  const { picture, name, gender } = userInfo;\n  return (\n    <Card style={{ width: '18rem' }} className=\"m-3\">\n      <Card.Img variant=\"top\" src={picture.large} />\n      <Card.Body>\n        <Card.Title>\n          {`${name.first} ${name.last}`}\n        </Card.Title>\n        <Container className=\"d-flex justify-content-between align-items-center\">\n          <Badge bg=\"info\">{gender}</Badge>\n          <UserOffCanvas userInfo={userInfo} placement=\"bottom\" scroll />\n        </Container>\n      </Card.Body>\n    </Card>\n  );\n};\n\nUserCard.propTypes = {\n  userInfo: PropTypes.shape({\n    picture: PropTypes.shape({\n      large: PropTypes.string,\n      medium: PropTypes.string,\n      thumbnail: PropTypes.string,\n    }),\n    name: PropTypes.shape({\n      title: PropTypes.string,\n      first: PropTypes.string,\n      last: PropTypes.string,\n    }),\n    gender: PropTypes.string,\n  }).isRequired,\n};\n\nexport default UserCard;\n","const BASE_URL = 'https://randomuser.me/api/';\n\nconst fetchUsers = async (numOfUsers) => {\n  const users = await fetch(`${BASE_URL}?results=${numOfUsers}`).then((res) => res.json()).then((res) => res.results);\n  return users;\n};\n\nexport default { fetchUsers };\n","import React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport UserCard from '../Components/UserCard';\nimport API from '../Util/api';\n\nconst Home = function () {\n  const [usersState, setUsersState] = useState([]);\n  useEffect(() => {\n    API.fetchUsers(100).then((data) => setUsersState(data));\n  }, []);\n  return (\n    <Container className=\"d-flex flex-wrap\">\n      {usersState.map((user) => <UserCard userInfo={user} key={user.id.value} />)}\n    </Container>\n  );\n};\n\nexport default Home;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport './app.scss';\nimport { Routes, Route } from 'react-router-dom';\nimport Home from './Pages/Home';\n\nconst App = function () {\n  return (\n    <div className=\"w-100 bg-light\">\n      <div className=\"bg-primary p-5 rounded-lg m-auto w-100 text-white\">\n        <h1 className=\"text-center\"> Random User</h1>\n      </div>\n      <Routes>\n        <Route exact path=\"/\" element={<Home />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","/* eslint-disable object-curly-newline */\n/* eslint-disable arrow-parens */\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}